{"name":"Ionic release commands","tagline":"A few gulp commands to simplify your Ionic app release pocess","body":"# Dependencies\r\n\r\n\t1. An Ionic project\r\n\t2. iOS and Android platforms added to your project\r\n\t3. Crosswalk plugin added to your project \r\n\r\n# Installation\r\n\r\n1. Copy the contents from the `gulp-commands.js` file provided in this repo into your project's `gulpfile.js`.\r\n2. Install the required npm modules from the root of your project.\r\n\r\n\t\t$ npm install --save-dev gulp run-sequence shelljs async\r\n\t\r\n3. Require the modules at the top of your `gulpfile.js`.\r\n\r\n\t\tvar gulp = require('gulp');\r\n\t\tvar sh = require('shelljs');\r\n\t\tvar async = require('async');\r\n\t\tvar path = require('path')\r\n\t\tvar spawn = require('child_process').spawn;\r\n\t\tvar runSequence = require('run-sequence');\r\n\r\n# Getting Started\r\n\r\nThese gulp commands make it very simple to build release candidates for your iOS and Android versions of your Ionic app. \r\n\r\n1. Create a `keystore` file. \r\n\t* The `keytool` command is required for this step.\r\n\t* Replace `YOUR_APP.keystore` with something like `my-cool-app.keystore` and `YOUR_ALIAS` with something like `MY_COOL_ALIAS`. \r\n\r\n\t\t\t$ cd ~/path/to/your/ionic/app\r\n\t\t\t$ keytool -genkey -v -keystore YOUR_APP.keystore -alias YOUR_ALIAS -keyalg RSA -keysize 2048 -validity 10000\r\n\r\n\t* This process will require a password. **Make sure you remember this password.** \r\n\t* After following the prompts, this will generate a `YOUR_APP.keystore` file at the root of your Ionic app's directory that we'll use later.\r\n\r\n2. Open your `gulpfile.js` file.\r\n3. Replace `YOUR_APP.keystore` with the name of your `.keystore` file and `YOUR_ALIAS` with the alias name you used previously. \r\n3. Replace `YOUR_PASSWORD` with the password you used to create your `.keystore` file.\r\n\r\n# Usage\r\n\r\nTo use these gulp commands, `zipalign` and `jarsigner` must be available from the command line. If they are not, search the web to install them on your machine.\r\n\r\n## iOS\r\n\r\n\t$ gulp ios-release\r\n\t\r\nAfter the command is finished, you'll need to open Xcode to finish the release process.\r\n\r\n## Android\r\n\t\r\n\t$ gulp android-release\r\n\t\r\nAfter the command is finished, an `android-arm7-release-signed.apk` and `android-x86-release-signed.apk` will have been built. Use these two files to upload your Android app to Google Play. They can be found at `./platforms/android/build/outputs/apk`. To upload both apks to Google Play you'll need to switch to Advanced Mode via their web interface.\r\n\r\n## Summary\r\n\r\nThese gulp commands make it so you don't have to manually run the commands found [here](http://ionicframework.com/docs/guide/publishing.html) everytime you want to publish your Android app. A HUGE TIME SAVER.\r\n\r\nAlso included in `gulp-commands.js` is `$ gulp iossim` and `$ gulp androidsim`. Two other commands that I use to emulate my app.\r\n\r\nI hope this helps you Ionicites with your build process! If you have any questions feel free to email me at <mailto:me@seanhill.info>.\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}